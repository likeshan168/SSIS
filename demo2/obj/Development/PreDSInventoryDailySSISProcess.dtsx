<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/8/2016 8:21:49 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="APCL2325PK2BB5Z"
  DTS:CreatorName="APAC\LIK41"
  DTS:DTSID="{EC36E807-FA8E-4C9F-A366-D641A10173B4}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.1100.286"
  DTS:LocaleID="2052"
  DTS:ObjectName="PreDSInventoryDailySSISProcess"
  DTS:PackageType="5"
  DTS:VersionBuild="138"
  DTS:VersionGUID="{2F441832-83DE-4365-B971-5DE4D6FC63FB}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Aspsdcw499.dcs2015.dcsapp_t]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{15C4A730-9B63-471B-9C28-A0B557D1FE90}"
      DTS:ObjectName="Aspsdcw499.dcs2015.dcsapp_t">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=Aspsdcw499;User ID=dcsapp_t;Initial Catalog=dcs2015;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA//FxdaBTkkm7w/i0yNsnDQAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAK91ScoKvVVtBWriXAVn60AAAAAASAAACgAAAAEAAAAJ6Bm54t3FJHIjqUjJ3VUu4YAAAAS0GoBn7b+cNl+hdW2F2w2Mo4ppatSFi2FAAAADL54llkMEju2C25f1sPWKfKaJky</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Fileconnection]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{B232D414-8B16-4992-90E0-B2D1EC58DFD2}"
      DTS:ObjectName="Fileconnection">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2052"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="936"
          DTS:ConnectionString="C:\DcsTest\template\dcsExcel\InventoryDaily\DI00007951_I_20100818.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="产品名称"
              DTS:DTSID="{373BD9BF-4FD4-458B-AAB6-24578B2EEEC8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="产品ID"
              DTS:DTSID="{97F53EED-03D1-4702-A3F2-116E37B16AE5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="产品规格"
              DTS:DTSID="{075AF8A8-68F4-4363-BF42-759C87264016}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="批号"
              DTS:DTSID="{6DD88DFF-AA17-431C-B52E-ADE6125B5F78}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="产品效期"
              DTS:DTSID="{1A3E5AC2-7D1F-4064-8660-49A68E94BE0E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="库存数量"
              DTS:DTSID="{E9CD8CFE-61DD-4AE7-A13F-AE1369C58ADB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="库存日期"
              DTS:DTSID="{19A3085C-9C7B-40F2-8CEE-32089428C833}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="库存状态"
              DTS:DTSID="{AB68A14A-91F6-48B2-9060-3A4E031A7EC5}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6A3D6896-8EAB-4081-BE32-290E3945875C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="currentUser">
      <DTS:VariableValue
        DTS:DataType="8">3A03AFAC-57E5-4E60-A4D8-835DE3BA4C61</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BEC91F90-2F8D-44CB-8EFA-E9A12B2A3C14}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorFileStatus">
      <DTS:VariableValue
        DTS:DataType="3">10</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{165EFD96-1039-4E99-BC97-F0019DD950FE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="fileDate">
      <DTS:VariableValue
        DTS:DataType="7">4/18/2016</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{47E9F86A-51F9-4BC2-9DE9-B0C0B424525E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="fileFeatureCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1E97B257-4590-4852-88A4-4434C7070F03}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="fileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F94427A5-89C5-4A30-8A87-5CA0FC09D06E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="filePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\DcsTest\EDI\File\dcsExcel\InventoryDaily\DCSAdmin\For_Upload\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1AF7E0B5-3A86-41C3-8474-04632D7EF20F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="fileStatus">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C0476617-3AC5-45D8-B247-3F64103EFADF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FirstError">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FA76A3D5-CA70-4906-92D2-33514AF4525C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InputFileFolder">
      <DTS:VariableValue
        DTS:DataType="8">\For_Upload\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2E4ED61F-7A97-4E41-80F8-391C1BCDBD14}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OutputErrorFileFolder">
      <DTS:VariableValue
        DTS:DataType="8">\Deleted</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{544025E7-10AA-4A73-88D6-E7A9F0B1D49F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OutputFileFolder">
      <DTS:VariableValue
        DTS:DataType="8">\Uploaded</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{548428AD-ADA7-47A1-BB5B-5A10FD247801}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="rawInventoryFileID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3CDC7B99-5A6E-4EF4-B8E9-64E212399FDC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ReadErrorFile">
      <DTS:VariableValue
        DTS:DataType="3">2</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{32983A3F-7FF6-4C38-A68D-B9CEE53F4DDB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RecordStatus">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F4775FF-D15C-442C-AA30-8FA822C55047}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BD8B57BE-96B2-4370-A9D7-997C6175B741}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="temp">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2FCC3EDF-9D8B-4D38-9BF5-B05DCD2633C3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="UploadOn">
      <DTS:VariableValue
        DTS:DataType="7">1/1/1900</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Clear Data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="序列容器"
      DTS:DTSID="{73470139-FA7F-4F7A-9F2A-C3A744C574BE}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear Data">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Clear Data\Insert InventoryUploadHistory(U)"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Insert History"
          DTS:DTSID="{74D55050-FF80-4C4C-8CCD-BD6109901504}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert InventoryUploadHistory(U)"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{15C4A730-9B63-471B-9C28-A0B557D1FE90}"
              SQLTask:SqlStatementSource="INSERT INTO [dbo].[InventoryUploadHistory]&#xA;([RecordStatus],[CreatedBy],[CreatedOn],[UploadBy],[UploadOn],[ModifiedBy],[ModifiedOn])&#xA;VALUES (0,?,getdate(),?,?,?,getdate())" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::currentUser"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::currentUser"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::UploadOn"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::currentUser"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach 循环容器"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach 循环容器"
      DTS:DTSID="{87AAF7FE-ACC4-4EBB-8411-C211B2C58B32}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach 循环容器">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{4AA05544-3754-4967-BF7B-0AB58FAE07AF}"
        DTS:ObjectName="{4AA05544-3754-4967-BF7B-0AB58FAE07AF}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\DcsTest\EDI\File\dcsExcel\InventoryDaily\DCSAdmin\For_Upload" />
            <FEFEProperty
              FileSpec="*.xls" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{8DBEB266-3A2C-473A-ADB2-C796503E60AE}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="NullErrorFile">
          <DTS:VariableValue
            DTS:DataType="3">1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach 循环容器\Add RawInventory data"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="数据流任务"
          DTS:DTSID="{6D216F88-12B8-49D8-9E0D-A9949BC7C3E8}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Add RawInventory data"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach 循环容器\Add RawInventory data.EventHandlers[OnPostExecute]"
              DTS:CreationName="OnPostExecute"
              DTS:DTSID="{7C806B98-9BF5-4A68-AF21-37B81F842F7B}"
              DTS:EventID="0"
              DTS:EventName="OnPostExecute"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="事件的传播属性"
                  DTS:DTSID="{094FBEDF-CC75-468D-8A26-21EACA63D6FF}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Foreach 循环容器\Add RawInventory data.EventHandlers[OnPostExecute]\Script Task"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Script Task"
                  DTS:DTSID="{16D3E082-5E72-49DC-A274-78CDDA5C0ACE}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Script Task">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <ScriptProject
                      Name="ST_d95473eb4a8744ffb69533c966bb0734"
                      VSTAMajorVersion="3"
                      VSTAMinorVersion="0"
                      Language="CSharp"
                      ReadOnlyVariables="User::RowCount">
                      <ProjectItem
                        Name="Properties\Settings.settings"
                        Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                      <ProjectItem
                        Name="Properties\Resources.resx"
                        Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                      <ProjectItem
                        Name="ScriptMain.cs"
                        Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_d95473eb4a8744ffb69533c966bb0734
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            MessageBox.Show(Dts.Variables["RowCount"].Value.ToString());
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                      <ProjectItem
                        Name="ST_d95473eb4a8744ffb69533c966bb0734.csproj"
                        Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0f8a312b-ca62-4883-a96f-9562acf2be7f}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d95473eb4a8744ffb69533c966bb0734</RootNamespace>
    <AssemblyName>ST_d95473eb4a8744ffb69533c966bb0734</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                      <ProjectItem
                        Name="Project"
                        Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_d95473eb4a8744ffb69533c966bb0734</msb:CodeName>
		<msb:DisplayName>ST_d95473eb4a8744ffb69533c966bb0734</msb:DisplayName>
		<msb:ProjectId>{4E6B26C9-BE80-4376-8268-42A5A1C9F225}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d95473eb4a8744ffb69533c966bb0734.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                      <ProjectItem
                        Name="Properties\Settings.Designer.cs"
                        Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d95473eb4a8744ffb69533c966bb0734.Properties.Settings.get_Default():ST_d95473eb4a8744ffb69533c966bb0734.Properties.Sett" +
    "ings")]

namespace ST_d95473eb4a8744ffb69533c966bb0734.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                      <ProjectItem
                        Name="Properties\AssemblyInfo.cs"
                        Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d95473eb4a8744ffb69533c966bb0734")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d95473eb4a8744ffb69533c966bb0734")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                      <ProjectItem
                        Name="Properties\Resources.Designer.cs"
                        Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d95473eb4a8744ffb69533c966bb0734.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d95473eb4a8744ffb69533c966bb0734.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d95473eb4a8744ffb69533c966bb0734.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d95473eb4a8744ffb69533c966bb0734.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d95473eb4a8744ffb69533c966bb0734.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                      <BinaryItem
                        Name="ST_d95473eb4a8744ffb69533c966bb0734.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACrDFVcAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAyi0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHgtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA0A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACs
LQAAAAAAAEgAAAACAAUA7CAAANQLAAABAAAAAAAAAMAsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMoCKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAKKBUA
AAomAigQAAAKFm8WAAAKKh4CKBcAAAoqHgIoGAAACiqufgEAAAQtHnITAABw0AMAAAIoGQAACm8a
AAAKcxsAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigcAAAKKi5zCAAABoAD
AAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAANwDAAAjfgAASAQAAJAF
AAAjU3RyaW5ncwAAAADYCQAAiAAAACNVUwBgCgAAEAAAACNHVUlEAAAAcAoAAGQBAAAjQmxvYgAA
AAAAAAACAAABVx2gAQkDAAAA+gEzABYAAAEAAAAfAAAABQAAAAYAAAAJAAAAAQAAABwAAAACAAAA
EAAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAHUDAQAAAAAABgAlAkUEBgC0AkUEBgBx
ATIEDwC5BAAABgCeAfMDBgAIAvMDBgDpAfMDBgCbAvMDBgBFAvMDBgBeAvMDBgC1AfMDBgDQAeIC
CgB5AiQDCgDwACQDBgCtA6YDBgBUATIEBgBBBaYDBgAVBGUEBgAFBN4DDgAkAV8DDgCFAV8DDgAM
AckDBgA5AUUECgBNAyQDEgD7BJsAEgBuAJsAFgB1BQ4FFgBUBQ4FBgC7AKYDBgB3AKYDBgCEBfMD
AAAAACUAAAAAAAEAAQABABAAvgMBADkAAQABAAAAEABsBMgERQABAAMAAAEQAAUFyARZAAMABwAD
AQAAMwUAAD0ABAAKABEAsgNoABEA4ABsABEAXgBwAAYGTQB0AFaAIwV3AFaAwAB3AFAgAAAAAIYA
xAMGAAEAgyAAAAAAhhglBAYAAQCLIAAAAACDGCUEBgABAJMgAAAAAJMIEQR7AAEAvyAAAAAAkwjI
AIAAAQDGIAAAAACTCNQAhQABAM4gAAAAAJYISAWLAAIA1SAAAAAAhhglBAYAAgDdIAAAAACRGCsE
kAACAAAAAQDcAgkAJQQBABEAJQQGABkAJQQKACkAJQQQADEAJQQQADkAJQQQAEEAJQQQAEkAJQQQ
AFEAJQQQAFkAJQQQAGEAJQQQAGkAJQQGAIEAJQQGAKkAJQQVALkAJQQGAHEAKwUbAMEA9wQgAMkA
nQMlANEA0gIrAIkA/AIvANkAcAUzAMEAYQUBAHEAJQQGAIkAJQQGAOkAiQA5AOkAgAVAAJEAJQRF
ALEAJQQGAAgAFABeAAgAGABjACkAcwDLAC4ACwCjAC4AEwCsAC4AGwDLAC4AIwDUAC4AKwD9AC4A
MwD9AC4AOwD9AC4AQwDUAC4ASwADAS4AUwD9AC4AWwAaAUMAYwBjAEkAcwDLAGEAewBjAGMAawBj
AAMAAQAEAAMAAAAVBJQAAADoAJkAAABMBZ4AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEA
AABBF1VfAAAAAAAAAQAAAAQAAAAAAAAAAAAAAEwAVQAAAAAACwAAAAAAAAAAAAAAVQAFAwAAAAAE
AAAAAAAAAAAAAABMAKYDAAAAAAsAAAAAAAAAAAAAAFUALgAAAAAABAAAAAAAAAAAAAAATAAOBQAA
AAAAAAAAAQAAAHYEAAAFAAIAAAAAU1RfZDk1NDczZWI0YTg3NDRmZmI2OTUzM2M5NjZiYjA3MzQA
PE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIA
ZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9kOTU0
NzNlYjRhODc0NGZmYjY5NTMzYzk2NmJiMDczNC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5j
dG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2Q5NTQ3M2ViNGE4NzQ0ZmZiNjk1MzNjOTY2YmIwNzM0
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9kOTU0NzNl
YjRhODc0NGZmYjY5NTMzYzk2NmJiMDczNC5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGlu
Z3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2Jq
ZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABTaG93AE1lc3NhZ2VC
b3gAZ2V0X0Fzc2VtYmx5AAAAAAARUgBvAHcAQwBvAHUAbgB0AABxUwBUAF8AZAA5ADUANAA3ADMA
ZQBiADQAYQA4ADcANAA0AGYAZgBiADYAOQA1ADMAMwBjADkANgA2AGIAYgAwADcAMwA0AC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAADms+QIxzyCSaEJhtUqEgyY
AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJpHAMgABwDIAAOBQABEXEO
BgABEnUReQQgABJ9BiACAQ4SfQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMG
EhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfZDk1NDczZWI0
YTg3NDRmZmI2OTUzM2M5NjZiYjA3MzQAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAARwEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVU
IEZyYW1ld29yayA0AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAoC0AAAAAAAAAAAAAui0AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAKwtAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAVV9BFwAAAQBVX0EXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwBkADkANQA0ADcAMwBlAGIANABhADgANwA0ADQAZgBmAGIANgA5ADUAMwAzAGMA
OQA2ADYAYgBiADAANwAzADQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANQA5ADUAMwAuADIANAA0ADAANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwBkADkANQA0ADcAMwBlAGIANABhADgANwA0ADQAZgBmAGIANgA5ADUAMwAzAGMAOQA2
ADYAYgBiADAANwAzADQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfAGQAOQA1ADQANwAzAGUAYgA0AGEAOAA3ADQANABmAGYAYgA2ADkANQAz
ADMAYwA5ADYANgBiAGIAMAA3ADMANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwBkADkANQA0ADcAMwBlAGIANABhADgANwA0ADQAZgBmAGIANgA5ADUAMwAz
AGMAOQA2ADYAYgBiADAANwAzADQAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUAOQA1ADMALgAyADQANAAwADUAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOQA1ADMALgAyADQANAAwADUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAzD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                    </ScriptProject>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标"
                  componentClassID="DTSAdapter.OLEDBDestination.3"
                  contactInfo="OLE DB 目标;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;4"
                  description="OLE DB 目标"
                  name="OLE DB 目标"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="命令超时前等待的时间(秒)。值为 0，表示无限期等待。"
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="指定用于打开行集的数据库对象的名称。"
                      name="OpenRowset">[dbo].[RawInventory]</property>
                    <property
                      dataType="System.String"
                      description="指定包含用于打开行集的数据库对象名的变量。"
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="要执行的 SQL 命令。"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="指定当数据源中没有代码页信息时使用的列代码页。"
                      name="DefaultCodePage">936</property>
                    <property
                      dataType="System.Boolean"
                      description="描述字符数据时，强制使用 DefaultCodePage 属性值。"
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="指定用于访问数据库的模式。"
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="指示是否将为标识列提供的值复制到目标。如果设置为 False，则将在目标中为标识列自动生成值。仅当启用了快速加载时适用。"
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="指示对于包含 Null 值的列是否将 Null 值插入目标中。如果为 False，则对于包含 Null 值的列会将其默认值插入目标中。仅当启用了快速加载时适用。"
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="指定将用于快速加载的选项。仅当启用了快速加载时适用。"
                      name="FastLoadOptions">CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="指定在插入数据期间何时发出提交命令。如果值为 0，则指定在数据插入结束时发出一个提交命令。仅当启用了快速加载时适用。"
                      name="FastLoadMaxInsertCommitSize">22333232</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Aspsdcw499.dcs2015.dcsapp_t]"
                      connectionManagerRefId="Package.ConnectionManagers[Aspsdcw499.dcs2015.dcsapp_t]"
                      description="指定用于访问数据库的 OLE DB 运行时连接。"
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入]"
                      errorOrTruncationOperation="插入"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB 目标输入">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[UploadBy]"
                          cachedDataType="guid"
                          cachedName="UploadBy"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[UploadBy]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[UploadBy]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[UploadOn]"
                          cachedDataType="date"
                          cachedName="UploadOn"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[UploadOn]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[UploadOn]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[CreatedBy]"
                          cachedDataType="guid"
                          cachedName="CreatedBy"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[CreatedBy]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[CreatedBy]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[CreatedOn]"
                          cachedDataType="dbTimeStamp"
                          cachedName="CreatedOn"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[CreatedOn]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[CreatedOn]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[RecordStatus]"
                          cachedDataType="i4"
                          cachedName="RecordStatus"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RecordStatus]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[RecordStatus]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[RawInventoryFileID]"
                          cachedDataType="guid"
                          cachedName="RawInventoryFileID"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RawInventoryFileId]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[RawInventoryFileID]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[产品ID]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="产品ID"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RawItemCode]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品ID]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[产品名称]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="产品名称"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RawItemName]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品名称]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[产品规格]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="产品规格"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RawItemType]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品规格]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[批号]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="批号"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[Lot]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[批号]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[库存日期]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="库存日期"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[InventoryDate]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存日期]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[库存状态]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="库存状态"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RawInventoryStatus]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存状态]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[产品效期]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="产品效期"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[ProductExpire]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品效期]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[库存数量]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="库存数量"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[StrQuantity]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存数量]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[产品效期1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="产品效期1"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[StrProductExpire]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[产品效期1]" />
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].Columns[库存日期1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="库存日期1"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[StrInventoryDate]"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[库存日期1]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[ID]"
                          dataType="guid"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RawItemCode]"
                          dataType="wstr"
                          length="255"
                          name="RawItemCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RawItemName]"
                          dataType="wstr"
                          length="255"
                          name="RawItemName" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RawItemType]"
                          dataType="wstr"
                          length="255"
                          name="RawItemType" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[Quantity]"
                          dataType="numeric"
                          name="Quantity"
                          precision="10" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[Lot]"
                          dataType="wstr"
                          length="255"
                          name="Lot" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[InventoryDate]"
                          dataType="wstr"
                          length="255"
                          name="InventoryDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RawInventoryStatus]"
                          dataType="wstr"
                          length="255"
                          name="RawInventoryStatus" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RowNumber]"
                          dataType="i4"
                          name="RowNumber" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[ProductExpire]"
                          dataType="wstr"
                          length="255"
                          name="ProductExpire" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[CreatedBy]"
                          dataType="guid"
                          name="CreatedBy" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[CreatedOn]"
                          dataType="dbTimeStamp"
                          name="CreatedOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[UploadBy]"
                          dataType="guid"
                          name="UploadBy" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[UploadOn]"
                          dataType="dbTimeStamp"
                          name="UploadOn" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RawInventoryFileId]"
                          dataType="guid"
                          name="RawInventoryFileId" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[TransactionNo]"
                          dataType="wstr"
                          length="50"
                          name="TransactionNo" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[RecordStatus]"
                          dataType="i4"
                          name="RecordStatus" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[SeqId]"
                          dataType="i4"
                          name="SeqId" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[StrQuantity]"
                          dataType="wstr"
                          length="255"
                          name="StrQuantity" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[StrProductExpire]"
                          dataType="wstr"
                          length="255"
                          name="StrProductExpire" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入].ExternalColumns[StrInventoryDate]"
                          dataType="wstr"
                          length="255"
                          name="StrInventoryDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Outputs[OLE DB 目标错误输出]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB 目标错误输出"
                      synchronousInputId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源"
                  componentClassID="DTSAdapter.FlatFileSource.3"
                  contactInfo="平面文件源;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;1"
                  description="平面文件源"
                  localeId="2052"
                  name="平面文件源"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="指定是否将长度为 0 的列视为 Null。"
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="指定包含该文件名的输出列的名称。如果未指定名称，则不会生成包含该文件名的输出列。"
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Fileconnection]"
                      connectionManagerRefId="Package.ConnectionManagers[Fileconnection]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出]"
                      name="平面文件源输出">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品名称]"
                          dataType="wstr"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[产品名称]"
                          length="255"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品名称]"
                          name="产品名称"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="指示数据是否为二进制格式。"
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品ID]"
                          dataType="wstr"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[产品ID]"
                          length="255"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品ID]"
                          name="产品ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="指示数据是否为二进制格式。"
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品规格]"
                          dataType="wstr"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[产品规格]"
                          length="255"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品规格]"
                          name="产品规格"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="指示数据是否为二进制格式。"
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[批号]"
                          dataType="wstr"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[批号]"
                          length="255"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[批号]"
                          name="批号"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="指示数据是否为二进制格式。"
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品效期]"
                          dataType="wstr"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[产品效期]"
                          length="255"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品效期]"
                          name="产品效期"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="指示数据是否为二进制格式。"
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存数量]"
                          dataType="wstr"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[库存数量]"
                          length="255"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存数量]"
                          name="库存数量"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="指示数据是否为二进制格式。"
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存日期]"
                          dataType="wstr"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[库存日期]"
                          length="255"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存日期]"
                          name="库存日期"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="指示数据是否为二进制格式。"
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存状态]"
                          dataType="wstr"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[库存状态]"
                          length="255"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存状态]"
                          name="库存状态"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="指示数据是否为二进制格式。"
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[产品名称]"
                          dataType="wstr"
                          length="255"
                          name="产品名称" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[产品ID]"
                          dataType="wstr"
                          length="255"
                          name="产品ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[产品规格]"
                          dataType="wstr"
                          length="255"
                          name="产品规格" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[批号]"
                          dataType="wstr"
                          length="255"
                          name="批号" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[产品效期]"
                          dataType="wstr"
                          length="255"
                          name="产品效期" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[库存数量]"
                          dataType="wstr"
                          length="255"
                          name="库存数量" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[库存日期]"
                          dataType="wstr"
                          length="255"
                          name="库存日期" />
                        <externalMetadataColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].ExternalColumns[库存状态]"
                          dataType="wstr"
                          length="255"
                          name="库存状态" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源错误输出]"
                      isErrorOut="true"
                      name="平面文件源错误输出">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源错误输出].Columns[平面文件源错误输出列]"
                          codePage="936"
                          dataType="text"
                          description="平面文件源错误输出列"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源错误输出].Columns[平面文件源错误输出列]"
                          name="平面文件源错误输出列" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源错误输出].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源错误输出].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源错误输出].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源错误输出].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach 循环容器\Add RawInventory data\派生列"
                  componentClassID="DTSTransform.DerivedColumn.3"
                  contactInfo="派生列;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;0"
                  description="通过对转换输入列应用表达式来创建新的列值。创建新列或覆盖现有列。例如，将 &quot;first name&quot; 列和 &quot;last name&quot; 列中的值连接在一起以创建一个 &quot;full name&quot; 列。"
                  name="派生列"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Inputs[派生列输入]"
                      description="派生列转换的输入"
                      name="派生列输入">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Inputs[派生列输入].Columns[产品效期]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="产品效期"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品效期]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">[UPPER]([TRIM](#{Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品效期]}))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">UPPER(TRIM([产品效期]))</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Inputs[派生列输入].Columns[库存日期]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="库存日期"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存日期]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">[UPPER]([TRIM](#{Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存日期]}))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">UPPER(TRIM([库存日期]))</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Inputs[派生列输入].Columns[产品名称]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="产品名称"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品名称]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">[UPPER]([TRIM](#{Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品名称]}))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">UPPER(TRIM([产品名称]))</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Inputs[派生列输入].Columns[产品ID]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="产品ID"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品ID]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">[UPPER]([TRIM](#{Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品ID]}))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">UPPER(TRIM([产品ID]))</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Inputs[派生列输入].Columns[产品规格]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="产品规格"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品规格]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">[UPPER]([TRIM](#{Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品规格]}))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">UPPER(TRIM([产品规格]))</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Inputs[派生列输入].Columns[批号]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="批号"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[批号]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">[UPPER]([TRIM](#{Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[批号]}))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">UPPER(TRIM([批号]))</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Inputs[派生列输入].Columns[库存数量]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="库存数量"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存数量]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">[UPPER]([TRIM](#{Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存数量]}))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">UPPER(TRIM([库存数量]))</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Inputs[派生列输入].Columns[库存状态]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="库存状态"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存状态]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">[UPPER]([TRIM](#{Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存状态]}))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">UPPER(TRIM([库存状态]))</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出]"
                      description="派生列转换的默认输出"
                      exclusionGroup="1"
                      name="派生列输出"
                      synchronousInputId="Package\Foreach 循环容器\Add RawInventory data\派生列.Inputs[派生列输入]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[UploadBy]"
                          dataType="guid"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[UploadBy]"
                          name="UploadBy"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">@[User::currentUser]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::currentUser]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[UploadOn]"
                          dataType="date"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[UploadOn]"
                          name="UploadOn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">@[User::UploadOn]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::UploadOn]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[CreatedBy]"
                          dataType="guid"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[CreatedBy]"
                          name="CreatedBy"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">@[User::currentUser]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::currentUser]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[CreatedOn]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[CreatedOn]"
                          name="CreatedOn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[RecordStatus]"
                          dataType="i4"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[RecordStatus]"
                          name="RecordStatus"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">@[User::RecordStatus]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::RecordStatus]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[RawInventoryFileID]"
                          dataType="guid"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[RawInventoryFileID]"
                          name="RawInventoryFileID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">@[User::rawInventoryFileID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::rawInventoryFileID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[产品效期1]"
                          dataType="wstr"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[产品效期1]"
                          name="产品效期1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">[UPPER]([TRIM](#{Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[产品效期]}))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">UPPER(TRIM([产品效期]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[库存日期1]"
                          dataType="wstr"
                          errorOrTruncationOperation="计算"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出].Columns[库存日期1]"
                          name="库存日期1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列表达式"
                              name="Expression">[UPPER]([TRIM](#{Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出].Columns[库存日期]}))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="派生列友好表达式"
                              expressionType="Notify"
                              name="FriendlyExpression">UPPER(TRIM([库存日期]))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列错误输出]"
                      description="派生列转换的错误输出"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="派生列错误输出"
                      synchronousInputId="Package\Foreach 循环容器\Add RawInventory data\派生列.Inputs[派生列输入]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列错误输出].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列错误输出].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列错误输出].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列错误输出].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach 循环容器\Add RawInventory data\行计数"
                  componentClassID="DTSTransform.RowCount.3"
                  contactInfo="行计数;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;0"
                  description="在行通过数据流时计算行数。例如，使用已处理的行数决定是否执行清除操作，或更新电子邮件中的文本以传递处理状态。"
                  name="行计数">
                  <properties>
                    <property
                      dataType="System.String"
                      description="指定保存行计数的变量。"
                      name="VariableName">User::RowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach 循环容器\Add RawInventory data\行计数.Inputs[行计数 输入 1]"
                      hasSideEffects="true"
                      name="行计数 输入 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach 循环容器\Add RawInventory data\行计数.Outputs[行计数 输出 1]"
                      name="行计数 输出 1"
                      synchronousInputId="Package\Foreach 循环容器\Add RawInventory data\行计数.Inputs[行计数 输入 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach 循环容器\Add RawInventory data.Paths[平面文件源输出]"
                  endId="Package\Foreach 循环容器\Add RawInventory data\行计数.Inputs[行计数 输入 1]"
                  name="平面文件源输出"
                  startId="Package\Foreach 循环容器\Add RawInventory data\平面文件源.Outputs[平面文件源输出]" />
                <path
                  refId="Package\Foreach 循环容器\Add RawInventory data.Paths[派生列输出]"
                  endId="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标.Inputs[OLE DB 目标输入]"
                  name="派生列输出"
                  startId="Package\Foreach 循环容器\Add RawInventory data\派生列.Outputs[派生列输出]" />
                <path
                  refId="Package\Foreach 循环容器\Add RawInventory data.Paths[行计数 输出 1]"
                  endId="Package\Foreach 循环容器\Add RawInventory data\派生列.Inputs[派生列输入]"
                  name="行计数 输出 1"
                  startId="Package\Foreach 循环容器\Add RawInventory data\行计数.Outputs[行计数 输出 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach 循环容器\Add RawInventoryFile data"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3845524B-68CE-498B-BB47-278443B03511}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Add RawInventoryFile data"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{15C4A730-9B63-471B-9C28-A0B557D1FE90}"
              SQLTask:SqlStatementSource="EXEC AddInventoryDailyRawFile ?,?,?,?,?,?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="ID"
                SQLTask:DtsVariableName="User::rawInventoryFileID" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@InventoryFileName"
                SQLTask:DtsVariableName="User::fileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@FileFeatureCode"
                SQLTask:DtsVariableName="User::fileFeatureCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@DataDate"
                SQLTask:DtsVariableName="User::fileDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@UserGUId"
                SQLTask:DtsVariableName="User::currentUser"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@FileStatus"
                SQLTask:DtsVariableName="User::fileStatus"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="2"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@UploadOn"
                SQLTask:DtsVariableName="User::UploadOn"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach 循环容器\Error FileExcel"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{BCBCCB1C-EBA1-4E09-AB66-AC9AC8C1A2A8}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Error FileExcel"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{15C4A730-9B63-471B-9C28-A0B557D1FE90}"
              SQLTask:SqlStatementSource="exec dbo.AddInventoryDailyRawFile ?,?,?,?,?,?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="ID"
                SQLTask:DtsVariableName="User::rawInventoryFileID" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@InventoryFileName"
                SQLTask:DtsVariableName="User::fileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@FileFeatureCode"
                SQLTask:DtsVariableName="User::fileFeatureCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@DataDate"
                SQLTask:DtsVariableName="User::fileDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@UserGUId"
                SQLTask:DtsVariableName="User::currentUser"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@FileStatus"
                SQLTask:DtsVariableName="User::ErrorFileStatus"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="2"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@UploadOn"
                SQLTask:DtsVariableName="User::UploadOn"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach 循环容器\Excel Reading"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{DB75F3B2-66F1-4CF7-9D0C-FF58B29DB60E}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Excel Reading"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_013d806fe9454e06b87209e1e95db54e"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::filePath"
              ReadWriteVariables="User::fileDate,User::fileFeatureCode,User::fileName,User::FirstError,User::temp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_013d806fe9454e06b87209e1e95db54e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_013d806fe9454e06b87209e1e95db54e")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_013d806fe9454e06b87209e1e95db54e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here

            string fileToTest = string.Empty;
            int temp = 0;
            string sql = string.Empty;
            int iCount = 0;
            string dates = string.Empty;
            string dateFormat = string.Empty;
            string filenames = string.Empty;
            int iColumnCount = 0;
            string ExeclFileName = null;

            if (Dts.Variables["fileName"].Value.ToString().IndexOf("NULL") > 0)
            {
                if ((Dts.Variables["fileName"].Value.ToString().ToUpper().Contains("_I_")))
                {
                    Dts.Variables["fileFeatureCode"].Value = (Dts.Variables["fileName"].Value.ToString().Substring(0, Dts.Variables["fileName"].Value.ToString().ToUpper().IndexOf("_I_")).ToUpper()).Replace("NULL_", "");
                    filenames = (Dts.Variables["fileName"].Value.ToString().Substring(0, Dts.Variables["fileName"].Value.ToString().ToUpper().IndexOf(".")).ToUpper()).Replace("NULL_", "");
                    ExeclFileName = (Dts.Variables["fileName"].Value.ToString().ToUpper()).Replace("NULL_", "");
                    dates = filenames.Substring(filenames.Length - 7, 8);
                    if ((dates.Length == 8))
                    {
                        dateFormat = dates.Substring(1, 4) + "- " + dates.Substring(5, 2) + "- " + dates.Substring(7, 2);
                        Dts.Variables["fileDate"].Value = Convert.ToDateTime(dateFormat);
                    }
                }
                temp = -1;
            }
            else
            {
                //判断文件少列
                if ((Dts.Variables["fileName"].Value.ToString().ToUpper()).IndexOf("LESS") > 0)
                {
                    if ((Dts.Variables["fileName"].Value.ToString().ToUpper().Contains("_I_")))
                    {
                        Dts.Variables["fileFeatureCode"].Value = (Dts.Variables["fileName"].Value.ToString().Substring(0, Dts.Variables["fileName"].Value.ToString().ToUpper().IndexOf("_I_")).ToUpper()).Replace("LESS_", "");
                        filenames = (Dts.Variables["fileName"].Value.ToString().Substring(0, Dts.Variables["fileName"].Value.ToString().ToUpper().IndexOf(".")).ToUpper()).Replace("LESS_", "");
                        ExeclFileName = (Dts.Variables["fileName"].Value.ToString().ToUpper()).Replace("LESS_", "");
                        dates = filenames.Substring(filenames.Length - 7, 8);
                        if ((dates.Length == 8))
                        {
                            dateFormat = dates.Substring(1, 4) + "- " + dates.Substring(5, 2) + "- " + dates.Substring(7, 2);
                            Dts.Variables["fileDate"].Value = Convert.ToDateTime(dateFormat);
                        }
                    }
                    temp = 100;
                }
                else
                {
                    //取得Excel文件路径
                    fileToTest = Dts.Variables["filePath"].Value.ToString() + "\\" + Dts.Variables["fileName"].Value.ToString();
                    //判断文件是否存在
                    if (File.Exists(fileToTest))
                    {
                        //设定返回值
                        if ((Dts.Variables["fileName"].Value.ToString().ToUpper().Contains("_I_")))
                        {
                            Dts.Variables["fileFeatureCode"].Value = Dts.Variables["fileName"].Value.ToString().Substring(0, Dts.Variables["fileName"].Value.ToString().ToUpper().IndexOf("_I_"));
                            ExeclFileName = Dts.Variables["fileName"].Value.ToString();
                            filenames = Dts.Variables["fileName"].Value.ToString().Substring(0, Dts.Variables["fileName"].Value.ToString().IndexOf("."));
                            //dates = filenames.Substring(filenames.Length - 7, 8);
                            string[] names = filenames.Split('_');
                            if (names.Length == 3)
                            {
                                dates = names[2];
                            }
                            if ((dates.Length == 8))
                            {
                                dateFormat = dates.Substring(0, 4) + "- " + dates.Substring(4, 2) + "- " + dates.Substring(6, 2);
                                Dts.Variables["fileDate"].Value = Convert.ToDateTime(dateFormat);
                            }
                        }
                        else
                        {
                            Dts.Variables["fileFeatureCode"].Value = "";
                        }
                    }
                }
            }
            Dts.Variables["temp"].Value = temp;
            Dts.Variables["FirstError"].Value = 2;
            Dts.Variables["fileName"].Value = ExeclFileName;

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_013d806fe9454e06b87209e1e95db54e</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_013d806fe9454e06b87209e1e95db54e</msb:DisplayName>
		<msb:ProjectId>{81D2D024-5427-4D43-B311-44C86EF15F89}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_013d806fe9454e06b87209e1e95db54e.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_013d806fe9454e06b87209e1e95db54e.Properties.Settings.get_Default():ST_013d806fe9454e06b87209e1e95db54e.Properties.Sett" +
    "ings")]

namespace ST_013d806fe9454e06b87209e1e95db54e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_013d806fe9454e06b87209e1e95db54e.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{cff68447-d540-492f-b494-0f7072f56213}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_013d806fe9454e06b87209e1e95db54e</RootNamespace>
    <AssemblyName>ST_013d806fe9454e06b87209e1e95db54e</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_013d806fe9454e06b87209e1e95db54e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_013d806fe9454e06b87209e1e95db54e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_013d806fe9454e06b87209e1e95db54e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_013d806fe9454e06b87209e1e95db54e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_013d806fe9454e06b87209e1e95db54e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_013d806fe9454e06b87209e1e95db54e.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFjBFVcAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAA1jUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIQ1AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA3BUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC4
NQAAAAAAAEgAAAACAAUAYCcAAGwNAAABAAAAAAAAAMw0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBgCbBgAAAQAAEX4QAAAKJhYKfhAAAAomfhAAAAoLfhAA
AAoMfhAAAAomFA0CKBEAAApvEgAACnIBAABwbxMAAApvFAAACm8VAAAKchMAAHBvFgAAChY+0AEA
AAIoEQAACm8SAAAKcgEAAHBvEwAACm8UAAAKbxUAAApvFwAACnIdAABwbxgAAAo5lgEAAAIoEQAA
Cm8SAAAKciUAAHBvEwAACgIoEQAACm8SAAAKcgEAAHBvEwAACm8UAAAKbxUAAAoWAigRAAAKbxIA
AApyAQAAcG8TAAAKbxQAAApvFQAACm8XAAAKch0AAHBvFgAACm8ZAAAKbxcAAApyRQAAcHJRAABw
bxoAAApvGwAACgIoEQAACm8SAAAKcgEAAHBvEwAACm8UAAAKbxUAAAoWAigRAAAKbxIAAApyAQAA
cG8TAAAKbxQAAApvFQAACm8XAAAKclMAAHBvFgAACm8ZAAAKbxcAAApyRQAAcHJRAABwbxoAAAoC
KBEAAApvEgAACnIBAABwbxMAAApvFAAACm8VAAAKbxcAAApyRQAAcHJRAABwbxoAAAoNJW8cAAAK
HVkebxkAAAoLB28cAAAKHjNiG40YAAABJRYHFxpvGQAACqIlF3JXAABwoiUYBxsYbxkAAAqiJRly
VwAAcKIlGgcdGG8ZAAAKoigdAAAKDAIoEQAACm8SAAAKcl0AAHBvEwAACggoHgAACowdAAABbxsA
AAoVCjgSBAAAAigRAAAKbxIAAApyAQAAcG8TAAAKbxQAAApvFQAACm8XAAAKcm8AAHBvFgAAChY+
0QEAAAIoEQAACm8SAAAKcgEAAHBvEwAACm8UAAAKbxUAAApvFwAACnIdAABwbxgAAAo5lgEAAAIo
EQAACm8SAAAKciUAAHBvEwAACgIoEQAACm8SAAAKcgEAAHBvEwAACm8UAAAKbxUAAAoWAigRAAAK
bxIAAApyAQAAcG8TAAAKbxQAAApvFQAACm8XAAAKch0AAHBvFgAACm8ZAAAKbxcAAApyeQAAcHJR
AABwbxoAAApvGwAACgIoEQAACm8SAAAKcgEAAHBvEwAACm8UAAAKbxUAAAoWAigRAAAKbxIAAApy
AQAAcG8TAAAKbxQAAApvFQAACm8XAAAKclMAAHBvFgAACm8ZAAAKbxcAAApyeQAAcHJRAABwbxoA
AAoCKBEAAApvEgAACnIBAABwbxMAAApvFAAACm8VAAAKbxcAAApyeQAAcHJRAABwbxoAAAoNJW8c
AAAKHVkebxkAAAoLB28cAAAKHjNiG40YAAABJRYHFxpvGQAACqIlF3JXAABwoiUYBxsYbxkAAAqi
JRlyVwAAcKIlGgcdGG8ZAAAKoigdAAAKDAIoEQAACm8SAAAKcl0AAHBvEwAACggoHgAACowdAAAB
bxsAAAofZAo4DQIAAAIoEQAACm8SAAAKcoUAAHBvEwAACm8UAAAKbxUAAApylwAAcAIoEQAACm8S
AAAKcgEAAHBvEwAACm8UAAAKbxUAAAooHwAACiggAAAKObsBAAACKBEAAApvEgAACnIBAABwbxMA
AApvFAAACm8VAAAKbxcAAApyHQAAcG8YAAAKOWkBAAACKBEAAApvEgAACnIlAABwbxMAAAoCKBEA
AApvEgAACnIBAABwbxMAAApvFAAACm8VAAAKFgIoEQAACm8SAAAKcgEAAHBvEwAACm8UAAAKbxUA
AApvFwAACnIdAABwbxYAAApvGQAACm8bAAAKAigRAAAKbxIAAApyAQAAcG8TAAAKbxQAAApvFQAA
Cg0CKBEAAApvEgAACnIBAABwbxMAAApvFAAACm8VAAAKFgIoEQAACm8SAAAKcgEAAHBvEwAACm8U
AAAKbxUAAApyUwAAcG8WAAAKbxkAAAoXjR8AAAElFh9fnW8hAAAKEwQRBI5pGTMFEQQYmgsHbxwA
AAoeQIMAAAAbjRgAAAElFgcWGm8ZAAAKoiUXclcAAHCiJRgHGhhvGQAACqIlGXJXAABwoiUaBxwY
bxkAAAqiKB0AAAoMAigRAAAKbxIAAApyXQAAcG8TAAAKCCgeAAAKjB0AAAFvGwAACisfAigRAAAK
bxIAAApyJQAAcG8TAAAKclEAAHBvGwAACgIoEQAACm8SAAAKcpsAAHBvEwAACgaMIAAAAW8bAAAK
AigRAAAKbxIAAApypQAAcG8TAAAKGIwgAAABbxsAAAoCKBEAAApvEgAACnIBAABwbxMAAAoJbxsA
AAoCKBEAAAoWbyIAAAoqHgIoIwAACioeAigkAAAKKq5+AQAABC0ecrsAAHDQAwAAAiglAAAKbyYA
AApzJwAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKCgAAAoqLnMIAAAGgAMA
AAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAMAQAACN+AACcBAAA5AUA
ACNTdHJpbmdzAAAAAIAKAAAwAQAAI1VTALALAAAQAAAAI0dVSUQAAADACwAArAEAACNCbG9iAAAA
AAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACMAAAAFAAAABgAAAAkAAAABAAAAKAAAAAIAAAAQ
AAAAAQAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAMQDAQAAAAAABgBNAqEEBgDcAqEE
BgCZAY4EDwAVBQAABgDGAUIEBgAwAkIEBgARAkIEBgDDAkIEBgBtAkIEBgCGAkIEBgDdAUIEBgD4
ARwDCgChAnMDCgAYAXMDBgD8A/UDBgB8AY4EBgCfBfUDBgBpBMEEBgBUBC0EDgBMAa4DDgCtAa4D
DgA0ARgEBgBhAaEEBgA4A/UDCgCcA3MDEgBXBcMAEgCGAMMABgDHBfUDBgC6APUDBgCzABAABgBg
BPUDBgABAPUDBgDjAPUDBgCPAPUDBgDTBUIEAAAAAAcAAAAAAAEAAQABABAADQRKADkAAQABAAAA
EADIBCQFRQABAAMAAAEQAGEFJAVZAAMABwADAQAAgwUAAD0ABAAKABEAAQSwABEACAG0ABEAdgC4
AAYGOQC8AFaAcwW/AFaA6AC/AFAgAAAAAIYAEwQGAAEA9yYAAAAAhhiBBAYAAQD/JgAAAACDGIEE
BgABAAcnAAAAAJMIZQTDAAEAMycAAAAAkwjwAMgAAQA6JwAAAACTCPwAzQABAEInAAAAAJYIrAXT
AAIASScAAAAAhhiBBAYAAgBRJwAAAACRGIcE2AACAAAAAQAOAwkAgQQBABEAgQQGABkAgQQKACkA
gQQQADEAgQQQADkAgQQQAEEAgQQQAEkAgQQQAFEAgQQQAFkAgQQQAGEAgQQQAGkAgQQGAIEAgQQG
AKkAgQQVALkAgQQGAMEA3AUkAHEAewUnAMkAUwUsANEA7AMxANkA+gI3AIkANgM7AMEAFAM/AMEA
eQQ7AMEAagVEAMEAPwNJAMEAbgBPANkABANVAMEASQNaAMEAmAVeAOEAuABkAMEAmAVqAPEAkQVx
AMEApgV2AMkAuAUBAHEAgQQGAIkAgQQGAAkBoQB9AAkBzwWGAJEAgQSMALEAgQQGAAgAFACmAAgA
GACrACkAcwATAS4ACwDrAC4AEwD0AC4AGwATAS4AIwAcAS4AKwBFAS4AMwBFAS4AOwBFAS4AQwAc
AS4ASwBLAS4AUwBFAS4AWwBiAUMAYwCrAEkAcwATAWEAewCrAGMAawCrABsAAwABAAQAAwAAAGkE
3AAAABAB4QAAALAF5gACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAEEXbF4AAAAAAABK
AAAABAAAAAAAAAAAAAAAlABBAAAAAAALAAAAAAAAAAAAAACdAFQDAAAAAAQAAAAAAAAAAAAAAJQA
9QMAAAAACwAAAAAAAAAAAAAAnQAaAAAAAAAAAAAAAQAAANIEAAAFAAIAAAAAAABJbnQzMgA8TW9k
dWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNj
b3JsaWIAU1RfMDEzZDgwNmZlOTQ1NGUwNmI4NzIwOWUxZTk1ZGI1NGUAUmVwbGFjZQBkZWZhdWx0
SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmls
ZQBUb0RhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmpl
Y3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUASW5kZXhPZgBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN1YnN0cmluZwBnZXRfTGVuZ3RoAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8wMTNkODA2ZmU5NDU0
ZTA2Yjg3MjA5ZTFlOTVkYjU0ZS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBDaGFyAGdldF9SZXNvdXJjZU1hbmFnZXIAVG9VcHBl
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF8wMTNkODA2ZmU5NDU0ZTA2Yjg3MjA5ZTFlOTVk
YjU0ZS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMDEz
ZDgwNmZlOTQ1NGUwNmI4NzIwOWUxZTk1ZGI1NGUuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNl
dHRpbmdzAENvbnRhaW5zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEV4aXN0cwBDb25j
YXQAT2JqZWN0AFNwbGl0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AENvbnZlcnQAZ2V0X0Fz
c2VtYmx5AEVtcHR5AAAAABFmAGkAbABlAE4AYQBtAGUAAAlOAFUATABMAAAHXwBJAF8AAB9mAGkA
bABlAEYAZQBhAHQAdQByAGUAQwBvAGQAZQAAC04AVQBMAEwAXwAAAQADLgAABS0AIAABEWYAaQBs
AGUARABhAHQAZQAACUwARQBTAFMAAAtMAEUAUwBTAF8AABFmAGkAbABlAFAAYQB0AGgAAANcAAAJ
dABlAG0AcAAAFUYAaQByAHMAdABFAHIAcgBvAHIAAHFTAFQAXwAwADEAMwBkADgAMAA2AGYAZQA5
ADQANQA0AGUAMAA2AGIAOAA3ADIAMAA5AGUAMQBlADkANQBkAGIANQA0AGUALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAJenf/q5zKZItQF17gQuY9IABCABAQgD
IAABBSABARERBCABAQ4FIAEBEVEIBwUIDg4OHQ4CBg4EIAASZQQgABJpBSABEm0cAyAAHAMgAA4E
IAEIDgQgAQIOBSACDggIBSACDg4OBCABARwDIAAIBQABDh0OBQABEXUOBgADDg4ODgQAAQIOBiAB
HQ4dAwgAARKAhRGAiQUgABKAjQcgAgEOEoCNCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMG
EkkDBhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQ
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF8w
MTNkODA2ZmU5NDU0ZTA2Yjg3MjA5ZTFlOTVkYjU0ZQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDE2AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEC5ORVQgRnJhbWV3b3JrIDQAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACsNQAAAAAAAAAAAADGNQAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAuDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBsXkEXAAABAGxeQRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADAAMQAzAGQAOAAwADYAZgBlADkANAA1ADQAZQAwADYAYgA4ADcAMgAwADkAZQAxAGUA
OQA1AGQAYgA1ADQAZQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1
ADkANQAzAC4AMgA0ADEANwAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADAAMQAzAGQAOAAwADYAZgBlADkANAA1ADQAZQAwADYAYgA4ADcAMgAwADkAZQAxAGUAOQA1
AGQAYgA1ADQAZQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AMAAxADMAZAA4ADAANgBmAGUAOQA0ADUANABlADAANgBiADgANwAyADAAOQBl
ADEAZQA5ADUAZABiADUANABlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADAAMQAzAGQAOAAwADYAZgBlADkANAA1ADQAZQAwADYAYgA4ADcAMgAwADkAZQAx
AGUAOQA1AGQAYgA1ADQAZQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANQA5ADUAMwAuADIANAAxADcAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADUAMwAuADIANAAxADcAMgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADYNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach 循环容器\Move Execl File"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{CE522D12-CE78-4042-8A77-DE0E5B1690D2}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move Execl File"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_5f956da4826f4e399fb48b80da196b85"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::fileName,User::filePath,User::InputFileFolder,User::OutputFileFolder">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_5f956da4826f4e399fb48b80da196b85
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here
            string sourceFile = string.Empty;
            string designationFile = string.Empty;
            string deletFolder = string.Empty;
            string bankupFolder = string.Empty;

            string designationFiles = string.Empty;
            string filePath = string.Empty;

            sourceFile = Dts.Variables["filePath"].Value.ToString() + Dts.Variables["fileName"].Value.ToString();

            filePath = Dts.Variables["filePath"].Value.ToString().ToUpper().Replace(Dts.Variables["InputFileFolder"].Value.ToString().ToUpper(), "");

            bankupFolder = filePath + Dts.Variables["OutputFileFolder"].Value.ToString();
            designationFile = bankupFolder + "\\" + System.IO.Path.GetFileName(sourceFile);

            try
            {
                if (!Directory.Exists(bankupFolder))
                {
                    Directory.CreateDirectory(bankupFolder);
                }

                if (File.Exists(designationFile))
                    File.Delete(designationFile);
                File.Move(sourceFile, designationFile);

                if (File.Exists(sourceFile))
                    File.Delete(sourceFile);
            }
            catch
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_5f956da4826f4e399fb48b80da196b85</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_5f956da4826f4e399fb48b80da196b85</msb:DisplayName>
		<msb:ProjectId>{D6BEF960-37B6-4273-9002-D86870BC9063}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_5f956da4826f4e399fb48b80da196b85.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f956da4826f4e399fb48b80da196b85.Properties.Settings.get_Default():ST_5f956da4826f4e399fb48b80da196b85.Properties.Sett" +
    "ings")]

namespace ST_5f956da4826f4e399fb48b80da196b85.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_5f956da4826f4e399fb48b80da196b85.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c2280dec-1fee-49dc-a9cf-a6c4a76cbae1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_5f956da4826f4e399fb48b80da196b85</RootNamespace>
    <AssemblyName>ST_5f956da4826f4e399fb48b80da196b85</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5f956da4826f4e399fb48b80da196b85")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_5f956da4826f4e399fb48b80da196b85")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f956da4826f4e399fb48b80da196b85.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f956da4826f4e399fb48b80da196b85.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f956da4826f4e399fb48b80da196b85.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5f956da4826f4e399fb48b80da196b85.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5f956da4826f4e399fb48b80da196b85.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_5f956da4826f4e399fb48b80da196b85.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFnBFVcAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAA/i8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKwvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
LwAAAAAAAEgAAAACAAUAGCIAANwMAAABAAAAAAAAAPQuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwBBAQAAAQAAEX4QAAAKCn4QAAAKC34QAAAKJn4QAAAK
DH4QAAAKJn4QAAAKJgIoEQAACm8SAAAKcgEAAHBvEwAACm8UAAAKbxUAAAoCKBEAAApvEgAACnIT
AABwbxMAAApvFAAACm8VAAAKKBYAAAoKAigRAAAKbxIAAApyAQAAcG8TAAAKbxQAAApvFQAACm8X
AAAKAigRAAAKbxIAAApyJQAAcG8TAAAKbxQAAApvFQAACm8XAAAKckUAAHBvGAAACgIoEQAACm8S
AAAKckcAAHBvEwAACm8UAAAKbxUAAAooFgAACgwIcmkAAHAGKBkAAAooGgAACgsIKBsAAAotBwgo
HAAACiYHKB0AAAosBgcoHgAACgYHKB8AAAoGKB0AAAosBgYoHgAACt4PJgIoEQAAChdvIAAACt4A
AigRAAAKFm8gAAAKKgAAAAEQAAAAAPEANCUBDw8AAAEeAighAAAKKh4CKCIAAAoqrn4BAAAELR5y
bQAAcNADAAACKCMAAApvJAAACnMlAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQq
HgIoJgAACioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
ABwEAAAjfgAAiAQAAMwFAAAjU3RyaW5ncwAAAABUCgAA4AAAACNVUwA0CwAAEAAAACNHVUlEAAAA
RAsAAJgBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAiAAAABQAAAAYAAAAJ
AAAAAQAAACYAAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAACpAwEA
AAAAAAYATwKPBAYA3gKPBAYAmwF8BA8AAwUAAAYAyAEnBAYAMgInBAYAEwInBAYAxQInBAYAbwIn
BAYAiAInBAYA3wEnBAYA+gERAwoAowJYAwoAEwFYAwYAhAXaAwYA4QPaAwYAfgF8BAYAVwSvBAYA
OQQSBA4ARwGTAw4ArwGTAw4ALwH9AwYAYwGPBAYALQPaAwoAgQNYAxIARQW+ABIAgAC+AAYANAMu
AAYAuQUuAAYARQQuAAYArQAuAAYA3gDaAwYAiQDaAwYAqgUnBAAAAAAlAAAAAAABAAEAAQAQAPID
AQA5AAEAAQAAABAAtgQSBT0AAQADAAABEABPBRIFWQADAAcAAwEAAGgFAABBAAQACgARAOYDnQAR
AAMBoQARAHAApQAGBlcAqQBWgFgFrABWgOMArABQIAAAAACGAPgDBgABALAhAAAAAIYYbwQGAAEA
uCEAAAAAgxhvBAYAAQDAIQAAAACTCFMEsAABAOwhAAAAAJMI6wC1AAEA8yEAAAAAkwj3ALoAAQD7
IQAAAACWCIsFwAACAAIiAAAAAIYYbwQGAAIACiIAAAAAkRh1BMUAAgAAAAEABgMJAG8EAQARAG8E
BgAZAG8ECgApAG8EEAAxAG8EEAA5AG8EEABBAG8EEABJAG8EEABRAG8EEABZAG8EEABhAG8EEABp
AG8EBgCJAG8EBgCpAG8EFQC5AG8EBgDBAMMFIQBxAGAFJADJAEEFKQDRANEDLgDZAPwCNAB5ACsD
OADBAH0FPADBAGcEOADBAGgAQgDhALIASADBAH0FTQDpAHYFVADpALMFWQD5AHYFVAD5AFwBXwD5
AAwDZADJAJcFAQBxAG8EBgB5AG8EBgABAZsAagABAaYFcwCRAG8EeQCxAG8EBgAIABQAkwAIABgA
mAApAHMAAAEuAAsA2AAuABMA4QAuABsAAAEuACMACQEuACsAMgEuADMAMgEuADsAMgEuAEMACQEu
AEsAOAEuAFMAMgEuAFsATwFDAGMAmABJAHMAAAFhAHsAmABjAGsAmAAbAAMAAQAEAAMAAABXBMkA
AAALAc4AAACPBdMAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAABBF2xeAAAAAAAAAQAA
AAQAAAAAAAAAAAAAAIEAXwAAAAAACwAAAAAAAAAAAAAAigA5AwAAAAAEAAAAAAAAAAAAAACBANoD
AAAAAAsAAAAAAAAAAAAAAIoAOAAAAAAAAAAAAAEAAADABAAABQACAAAAAFNUXzVmOTU2ZGE0ODI2
ZjRlMzk5ZmI0OGI4MGRhMTk2Yjg1ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBW
YXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAEdldEZpbGVO
YW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUARGVsZXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUATW92ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRv
U3RyaW5nAFBhdGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNUXzVmOTU2ZGE0ODI2ZjRlMzk5ZmI0OGI4MGRhMTk2Yjg1LmRsbABnZXRfSXRl
bQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAERpcmVj
dG9yeUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBUb1VwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0u
RGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNUXzVmOTU2ZGE0ODI2ZjRlMzk5ZmI0OGI4MGRhMTk2Yjg1LlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF81Zjk1NmRhNDgyNmY0ZTM5OWZiNDhiODBk
YTE5NmI4NS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRz
AFNjcmlwdFJlc3VsdHMARXhpc3RzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tS
ZXN1bHQAZ2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9yeQBFbXB0eQAAAAAAEWYAaQBsAGUAUABh
AHQAaAAAEWYAaQBsAGUATgBhAG0AZQAAH0kAbgBwAHUAdABGAGkAbABlAEYAbwBsAGQAZQByAAAB
ACFPAHUAdABwAHUAdABGAGkAbABlAEYAbwBsAGQAZQByAAADXAAAcVMAVABfADUAZgA5ADUANgBk
AGEANAA4ADIANgBmADQAZQAzADkAOQBmAGIANAA4AGIAOAAwAGQAYQAxADkANgBiADgANQAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAKezsoD1+6ZPstJX3BDKwHMA
BCABAQgDIAABBSABARERBCABAQ4FIAEBEVEFBwMODg4CBg4EIAASZQQgABJpBSABEm0cAyAAHAMg
AA4FAAIODg4FIAIODg4EAAEODgYAAw4ODg4EAAECDgUAARJ5DgQAAQEOBQACAQ4OCAABEoCBEYCF
BSAAEoCJByACAQ4SgIkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYI
AwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQAB
AFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzVmOTU2ZGE0ODI2ZjRl
Mzk5ZmI0OGI4MGRhMTk2Yjg1AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAEcBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFt
ZXdvcmsgNAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAA1C8AAAAAAAAAAAAA7i8AAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOAvAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAGxeQRcAAAEAbF5BFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANQBmADkANQA2AGQAYQA0ADgAMgA2AGYANABlADMAOQA5AGYAYgA0ADgAYgA4ADAA
ZABhADEAOQA2AGIAOAA1AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADUAOQA1ADMALgAyADQAMQA3ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8ANQBmADkANQA2AGQAYQA0ADgAMgA2AGYANABlADMAOQA5AGYAYgA0ADgAYgA4ADAAZABh
ADEAOQA2AGIAOAA1AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwA1AGYAOQA1ADYAZABhADQAOAAyADYAZgA0AGUAMwA5ADkAZgBiADQAOABi
ADgAMABkAGEAMQA5ADYAYgA4ADUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8ANQBmADkANQA2AGQAYQA0ADgAMgA2AGYANABlADMAOQA5AGYAYgA0ADgAYgA4
ADAAZABhADEAOQA2AGIAOAA1AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA1ADkANQAzAC4AMgA0ADEANwAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADkANQAzAC4AMgA0ADEANwAyAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAAAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach 循环容器\Null FileExcel Error(U)"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C6BB45E6-C9D4-4413-A290-130F32D658A5}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Null FileExcel Error(U)"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{15C4A730-9B63-471B-9C28-A0B557D1FE90}"
              SQLTask:SqlStatementSource="exec dbo.AddInventoryDailyRawFile ?,?,?,?,?,?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="ID"
                SQLTask:DtsVariableName="User::rawInventoryFileID" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@InventoryFileName"
                SQLTask:DtsVariableName="User::fileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@FileFeatureCode"
                SQLTask:DtsVariableName="User::fileFeatureCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@DataDate"
                SQLTask:DtsVariableName="User::fileDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@UserGUId"
                SQLTask:DtsVariableName="User::currentUser"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@FileStatus"
                SQLTask:DtsVariableName="User::ErrorFileStatus"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="2"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@UploadOn"
                SQLTask:DtsVariableName="User::UploadOn"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach 循环容器\update RawInventory RawNumber"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{F158F0A9-2908-4A25-8C3D-45033EF139C0}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="update RawInventory RawNumber"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{15C4A730-9B63-471B-9C28-A0B557D1FE90}"
              SQLTask:SqlStatementSource="EXEC  AddInventoryDailyRowNumberTransaction  ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@RawInvertoryFileId"
                SQLTask:DtsVariableName="User::rawInventoryFileID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach 循环容器\Update RawInventoryFile Status"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{9B809D46-ACD1-4D60-B56F-51A0D4AB92AC}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update RawInventoryFile Status"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{15C4A730-9B63-471B-9C28-A0B557D1FE90}"
              SQLTask:SqlStatementSource="exec AddIncorrectInventoryOfNullFileAndErrorFileTransaction ?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@RawInventoryFileID"
                SQLTask:DtsVariableName="User::rawInventoryFileID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorType"
                SQLTask:DtsVariableName="User::NullErrorFile"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="2"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach 循环容器\Update RawInventoryFile Status 1"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{A68A9932-8435-4038-844E-CAF9C86B2900}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update RawInventoryFile Status 1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{15C4A730-9B63-471B-9C28-A0B557D1FE90}"
              SQLTask:SqlStatementSource="exec AddIncorrectInventoryOfNullFileAndErrorFileTransaction ?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@RawInventoryFileID"
                SQLTask:DtsVariableName="User::rawInventoryFileID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorType"
                SQLTask:DtsVariableName="User::ReadErrorFile"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="2"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach 循环容器.PrecedenceConstraints[约束]"
          DTS:CreationName=""
          DTS:DTSID="{AC76CAFD-08A8-4A45-AF80-5B7FF2D69087}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::temp]==100"
          DTS:From="Package\Foreach 循环容器\Excel Reading"
          DTS:LogicalAnd="True"
          DTS:ObjectName="约束"
          DTS:To="Package\Foreach 循环容器\Error FileExcel" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach 循环容器.PrecedenceConstraints[约束 1]"
          DTS:CreationName=""
          DTS:DTSID="{BE26A049-0CC9-496D-87F9-271350C3882D}"
          DTS:From="Package\Foreach 循环容器\Error FileExcel"
          DTS:LogicalAnd="True"
          DTS:ObjectName="约束 1"
          DTS:To="Package\Foreach 循环容器\Update RawInventoryFile Status 1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach 循环容器.PrecedenceConstraints[约束 2]"
          DTS:CreationName=""
          DTS:DTSID="{30670AA2-B54D-4063-9DE2-39B82C195DD6}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::temp]&lt;0"
          DTS:From="Package\Foreach 循环容器\Excel Reading"
          DTS:LogicalAnd="True"
          DTS:ObjectName="约束 2"
          DTS:To="Package\Foreach 循环容器\Null FileExcel Error(U)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach 循环容器.PrecedenceConstraints[约束 3]"
          DTS:CreationName=""
          DTS:DTSID="{3B1E4271-D95F-44B4-A279-A208F2F17FFB}"
          DTS:From="Package\Foreach 循环容器\Null FileExcel Error(U)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="约束 3"
          DTS:To="Package\Foreach 循环容器\Update RawInventoryFile Status" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach 循环容器.PrecedenceConstraints[约束 4]"
          DTS:CreationName=""
          DTS:DTSID="{EF78F0BB-AF53-483F-A00E-0870AF65E675}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::temp]==0"
          DTS:From="Package\Foreach 循环容器\Excel Reading"
          DTS:LogicalAnd="True"
          DTS:ObjectName="约束 4"
          DTS:To="Package\Foreach 循环容器\Add RawInventoryFile data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach 循环容器.PrecedenceConstraints[约束 5]"
          DTS:CreationName=""
          DTS:DTSID="{1FA33BC8-D86F-46CB-8033-4F7E3F45114C}"
          DTS:From="Package\Foreach 循环容器\Add RawInventoryFile data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="约束 5"
          DTS:To="Package\Foreach 循环容器\Add RawInventory data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach 循环容器.PrecedenceConstraints[约束 6]"
          DTS:CreationName=""
          DTS:DTSID="{C84579EC-D458-49A0-946D-9D1D58CB2771}"
          DTS:From="Package\Foreach 循环容器\Add RawInventory data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="约束 6"
          DTS:To="Package\Foreach 循环容器\update RawInventory RawNumber" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach 循环容器.PrecedenceConstraints[约束 7]"
          DTS:CreationName=""
          DTS:DTSID="{13D69CEA-9C79-4B92-A741-2EAD1C47B9AB}"
          DTS:From="Package\Foreach 循环容器\update RawInventory RawNumber"
          DTS:LogicalAnd="True"
          DTS:ObjectName="约束 7"
          DTS:To="Package\Foreach 循环容器\Move Execl File" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{D6FE2BC0-A260-4F45-A371-16306FF45DB0}"
          DTS:ObjectName="{D6FE2BC0-A260-4F45-A371-16306FF45DB0}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::fileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach 循环容器 1"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach 循环容器"
      DTS:DTSID="{E5D2AC0E-0933-45F9-969E-06CAA5297177}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach 循环容器 1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{ADB7E5C7-006D-4791-BA36-22E1641F4892}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="ErrorFileName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach 循环容器 1\Move Execl File"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{CA96E943-064B-47BB-8CEB-F9877910C9DC}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move Execl File"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_4ab4d4c8d291491895a083ff38b9c5aa"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ErrorFileName,User::filePath,User::InputFileFolder,User::OutputErrorFileFolder">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_4ab4d4c8d291491895a083ff38b9c5aa.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e94be9fd-03ce-416e-b275-581b680b787b}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4ab4d4c8d291491895a083ff38b9c5aa</RootNamespace>
    <AssemblyName>ST_4ab4d4c8d291491895a083ff38b9c5aa</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_4ab4d4c8d291491895a083ff38b9c5aa
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here
            string sourceFile = string.Empty;
            string designationFile = string.Empty;
            string deletFolder = string.Empty;
            string errorFolder = string.Empty;

            string designationFiles = string.Empty;
            string filePath = string.Empty;

            sourceFile = Dts.Variables["ErrorFileName"].Value.ToString();

            filePath = Dts.Variables["filePath"].Value.ToString().ToUpper().Replace(Dts.Variables["InputFileFolder"].Value.ToString().ToUpper(), "");

            designationFile = filePath + Dts.Variables["OutputErrorFileFolder"].Value.ToString() + "\\" + System.IO.Path.GetFileName(sourceFile);
            errorFolder = filePath + Dts.Variables["OutputErrorFileFolder"].Value.ToString();

            Dts.TaskResult = (int)ScriptResults.Success;
            try
            {
                if (!Directory.Exists(errorFolder))
                    Directory.CreateDirectory(errorFolder);

                if (File.Exists(designationFile))
                    File.Delete(designationFile);
                File.Move(sourceFile, designationFile);

                if (File.Exists(designationFiles))
                    File.Delete(designationFiles);

            }
            catch
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_4ab4d4c8d291491895a083ff38b9c5aa</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_4ab4d4c8d291491895a083ff38b9c5aa</msb:DisplayName>
		<msb:ProjectId>{17656888-219E-4AC4-9A84-2A72950F2A72}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4ab4d4c8d291491895a083ff38b9c5aa.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4ab4d4c8d291491895a083ff38b9c5aa.Properties.Settings.get_Default():ST_4ab4d4c8d291491895a083ff38b9c5aa.Properties.Sett" +
    "ings")]

namespace ST_4ab4d4c8d291491895a083ff38b9c5aa.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4ab4d4c8d291491895a083ff38b9c5aa")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4ab4d4c8d291491895a083ff38b9c5aa")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4ab4d4c8d291491895a083ff38b9c5aa.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4ab4d4c8d291491895a083ff38b9c5aa.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4ab4d4c8d291491895a083ff38b9c5aa.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4ab4d4c8d291491895a083ff38b9c5aa.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4ab4d4c8d291491895a083ff38b9c5aa.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_4ab4d4c8d291491895a083ff38b9c5aa.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFnBFVcAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAADjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALwvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
LwAAAAAAAEgAAAACAAUAECIAAPQMAAABAAAAAAAAAAQvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQA8AQAAAQAAEX4QAAAKCn4QAAAKC34QAAAKJn4QAAAK
DH4QAAAKDX4QAAAKJgIoEQAACm8SAAAKcgEAAHBvEwAACm8UAAAKbxUAAAoKAigRAAAKbxIAAApy
HQAAcG8TAAAKbxQAAApvFQAACm8WAAAKAigRAAAKbxIAAApyLwAAcG8TAAAKbxQAAApvFQAACm8W
AAAKck8AAHBvFwAACiUCKBEAAApvEgAACnJRAABwbxMAAApvFAAACm8VAAAKcn0AAHAGKBgAAAoo
GQAACgsCKBEAAApvEgAACnJRAABwbxMAAApvFAAACm8VAAAKKBoAAAoMAigRAAAKFm8bAAAKCCgc
AAAKLQcIKB0AAAomBygeAAAKLAYHKB8AAAoGByggAAAKCSgeAAAKLAYJKB8AAAreDyYCKBEAAAoX
bxsAAAreACoBEAAAAAD4ADQsAQ8PAAABHgIoIQAACioeAigiAAAKKq5+AQAABC0ecoEAAHDQAwAA
AigjAAAKbyQAAApzJQAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKCYAAAoq
LnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAcBAAAI34A
AIgEAADMBQAAI1N0cmluZ3MAAAAAVAoAAPQAAAAjVVMASAsAABAAAAAjR1VJRAAAAFgLAACcAQAA
I0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAm
AAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAqQMBAAAAAAAGAE8C
jwQGAN4CjwQGAJsBfAQPAAMFAAAGAMgBJwQGADICJwQGABMCJwQGAMUCJwQGAG8CJwQGAIgCJwQG
AN8BJwQGAPoBEQMKAKMCWAMKABMBWAMGAIQF2gMGAOED2gMGAH4BfAQGAFcErwQGADkEEgQOAEcB
kwMOAK8BkwMOAC8B/QMGAGMBjwQGAC0D2gMKAIEDWAMSAEUFvgASAIAAvgAGADQDCgAGALkFCgAG
AEUECgAGAK0ACgAGAN4A2gMGAIkA2gMGAKoFJwQAAAAAAQAAAAAAAQABAAEAEADyAzsAOQABAAEA
AAAQALYEEgU9AAEAAwAAARAATwUSBVkAAwAHAAMBAABoBQAAQQAEAAoAEQDmA58AEQADAaMAEQBw
AKcABgYzAKsAVoBYBa4AVoDjAK4AUCAAAAAAhgD4AwYAAQCoIQAAAACGGG8EBgABALAhAAAAAIMY
bwQGAAEAuCEAAAAAkwhTBLIAAQDkIQAAAACTCOsAtwABAOshAAAAAJMI9wC8AAEA8yEAAAAAlgiL
BcIAAgD6IQAAAACGGG8EBgACAAIiAAAAAJEYdQTHAAIAAAABAAYDCQBvBAEAEQBvBAYAGQBvBAoA
KQBvBBAAMQBvBBAAOQBvBBAAQQBvBBAASQBvBBAAUQBvBBAAWQBvBBAAYQBvBBAAaQBvBAYAiQBv
BAYAqQBvBBUAuQBvBAYAwQDDBSIAcQBgBSUAyQBBBSoA0QDRAy8A2QD8AjUAeQArAzkAwQBnBDkA
wQBoAD0A4QCyAEMAwQB9BUgAwQB9BVAAyQCXBQEA6QB2BVYA6QCzBVsA+QB2BVYA+QBcAWEA+QAM
A2YAcQBvBAYAeQBvBAYAAQGbAGwAAQGmBXUAkQBvBHsAsQBvBAYACAAUAJUACAAYAJoAKQBzAAIB
LgALANoALgATAOMALgAbAAIBLgAjAAsBLgArADQBLgAzADQBLgA7ADQBLgBDAAsBLgBLADoBLgBT
ADQBLgBbAFEBQwBjAJoASQBzAAIBYQB7AJoAYwBrAJoAGwADAAEABAADAAAAVwTLAAAACwHQAAAA
jwXVAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAQRdsXgAAAAAAADsAAAAEAAAAAAAA
AAAAAACDAF8AAAAAAAsAAAAAAAAAAAAAAIwAOQMAAAAABAAAAAAAAAAAAAAAgwDaAwAAAAALAAAA
AAAAAAAAAACMABQAAAAAAAAAAAABAAAAwAQAAAUAAgAAAAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfNGFiNGQ0YzhkMjkxNDkxODk1
YTA4M2ZmMzhiOWM1YWEAbXNjb3JsaWIAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBHZXRGaWxlTmFtZQBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
Z2V0X1ZhbHVlAHZhbHVlAE1vdmUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQ
YXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2Rl
bABTVF80YWI0ZDRjOGQyOTE0OTE4OTVhMDgzZmYzOGI5YzVhYS5kbGwAZ2V0X0l0ZW0AU3lzdGVt
AEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBEaXJlY3RvcnlJbmZv
AGdldF9SZXNvdXJjZU1hbmFnZXIAVG9VcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0
aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF80
YWI0ZDRjOGQyOTE0OTE4OTVhMDgzZmYzOGI5YzVhYS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNGFiNGQ0YzhkMjkxNDkxODk1YTA4M2ZmMzhiOWM1YWEu
UHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRS
ZXN1bHRzAEV4aXN0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdl
dF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkARW1wdHkAAAAAABtFAHIAcgBvAHIARgBpAGwAZQBO
AGEAbQBlAAARZgBpAGwAZQBQAGEAdABoAAAfSQBuAHAAdQB0AEYAaQBsAGUARgBvAGwAZABlAHIA
AAEAK08AdQB0AHAAdQB0AEUAcgByAG8AcgBGAGkAbABlAEYAbwBsAGQAZQByAAADXAAAcVMAVABf
ADQAYQBiADQAZAA0AGMAOABkADIAOQAxADQAOQAxADgAOQA1AGEAMAA4ADMAZgBmADMAOABiADkA
YwA1AGEAYQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAJ/t5YrW
uJpEsrxkG2MDL+0ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEGBwQODg4OAgYOBCAAEmUEIAAS
aQUgARJtHAMgABwDIAAOBSACDg4OBAABDg4HAAQODg4ODgUAAg4ODgQAAQIOBQABEnkOBAABAQ4F
AAIBDg4IAAESgIERgIUFIAASgIkHIAIBDhKAiQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAAD
BhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAAAQQIABJJBAgAEk0ECAAS
EAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1Rf
NGFiNGQ0YzhkMjkxNDkxODk1YTA4M2ZmMzhiOWM1YWEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAxNgAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRAuTkVUIEZyYW1ld29yayA0AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAOQvAAAAAAAAAAAAAP4vAAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADwLwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAGxeQRcAAAEAbF5BFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANABhAGIANABkADQAYwA4AGQAMgA5ADEANAA5ADEAOAA5ADUAYQAwADgAMwBmAGYA
MwA4AGIAOQBjADUAYQBhAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADUAOQA1ADMALgAyADQAMQA3ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8ANABhAGIANABkADQAYwA4AGQAMgA5ADEANAA5ADEAOAA5ADUAYQAwADgAMwBmAGYAMwA4
AGIAOQBjADUAYQBhAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwA0AGEAYgA0AGQANABjADgAZAAyADkAMQA0ADkAMQA4ADkANQBhADAAOAAz
AGYAZgAzADgAYgA5AGMANQBhAGEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8ANABhAGIANABkADQAYwA4AGQAMgA5ADEANAA5ADEAOAA5ADUAYQAwADgAMwBm
AGYAMwA4AGIAOQBjADUAYQBhAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA1ADkANQAzAC4AMgA0ADEANwAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADkANQAzAC4AMgA0ADEANwAyAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[约束]"
      DTS:CreationName=""
      DTS:DTSID="{ABC35C69-14EA-4D7F-AD68-2B64D7542E80}"
      DTS:From="Package\Clear Data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="约束"
      DTS:To="Package\Foreach 循环容器" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[约束 1]"
      DTS:CreationName=""
      DTS:DTSID="{AA209E29-7112-43E5-AA9F-02B0F17937A3}"
      DTS:From="Package\Foreach 循环容器"
      DTS:LogicalAnd="True"
      DTS:ObjectName="约束 1"
      DTS:To="Package\Foreach 循环容器 1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--此 CDATA 部分包含包的布局信息。该部分包括(x,y)坐标、宽度和高度之类的信息。-->
<!--如果您手动编辑此部分并且出错，则可以删除此部分。 -->
<!--该包仍将能够正常加载，但以前的布局信息将丢失，并且设计器将自动在设计图面上重新排列这些元素。-->
<Objects
  Version="sql11">
  <!--下面的每个节点都将包含不会影响运行时行为的属性。-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="169,56"
          Id="Package\Clear Data\Insert InventoryUploadHistory(U)"
          TopLeft="47.9999952316286,33.1428505960779" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="222,112"
          Size="222,155"
          Id="Package\Clear Data"
          TopLeft="35.8333319094447,215.99999335834" />
        <NodeLayout
          Size="130,54"
          Id="Package\Foreach 循环容器\Add RawInventory data"
          TopLeft="502.166641864513,95.4999923620909" />
        <NodeLayout
          Size="130,46"
          Id="Package\Foreach 循环容器\Add RawInventoryFile data"
          TopLeft="326.962938716383,97.4285624148899" />
        <NodeLayout
          Size="130,42"
          Id="Package\Foreach 循环容器\Error FileExcel"
          TopLeft="23.9999862909323,154.999988045012" />
        <NodeLayout
          Size="157,42"
          Id="Package\Foreach 循环容器\Excel Reading"
          TopLeft="57.333318299718,41.7142795470299" />
        <NodeLayout
          Size="169,42"
          Id="Package\Foreach 循环容器\Move Execl File"
          TopLeft="674.666645738815,187.857133463938" />
        <NodeLayout
          Size="135,50"
          Id="Package\Foreach 循环容器\Null FileExcel Error(U)"
          TopLeft="246.499977449577,2.71428153952792" />
        <NodeLayout
          Size="161,48"
          Id="Package\Foreach 循环容器\update RawInventory RawNumber"
          TopLeft="677.833314822781,94.4285644073879" />
        <NodeLayout
          Size="134,49"
          Id="Package\Foreach 循环容器\Update RawInventoryFile Status"
          TopLeft="415.759231484232,10.0396779906725" />
        <NodeLayout
          Size="130,61"
          Id="Package\Foreach 循环容器\Update RawInventoryFile Status 1"
          TopLeft="213.999978741011,152.214273901619" />
        <EdgeLayout
          Id="Package\Foreach 循环容器.PrecedenceConstraints[约束]"
          TopLeft="135.833318299718,83.7142795470299">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-46.8333320087857,71.285708497982"
              Start="0,0"
              End="-46.8333320087857,63.785708497982">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.642854248991" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.642854248991"
                    Point2="0,35.642854248991"
                    Point3="-4,35.642854248991" />
                  <mssgle:LineSegment
                    End="-42.8333320087857,35.642854248991" />
                  <mssgle:CubicBezierSegment
                    Point1="-42.8333320087857,35.642854248991"
                    Point2="-46.8333320087857,35.642854248991"
                    Point3="-46.8333320087857,39.642854248991" />
                  <mssgle:LineSegment
                    End="-46.8333320087857,63.785708497982" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-31.4166660043929,40.642854248991,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach 循环容器.PrecedenceConstraints[约束 1]"
          TopLeft="153.999986290932,179.357130973316">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.9999924500787,0"
              Start="0,0"
              End="52.4999924500787,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="52.4999924500787,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach 循环容器.PrecedenceConstraints[约束 2]"
          TopLeft="214.333318299718,57.0476128803632">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32.1666591498586,-29.3333313408353"
              Start="0,0"
              End="24.6666591498586,-29.3333313408353">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="9.57492037516968,0" />
                  <mssgle:CubicBezierSegment
                    Point1="9.57492037516968,0"
                    Point2="13.5749203751697,0"
                    Point3="13.5749203751697,-4" />
                  <mssgle:LineSegment
                    End="13.5749203751697,-25.3333313408353" />
                  <mssgle:CubicBezierSegment
                    Point1="13.5749203751697,-25.3333313408353"
                    Point2="13.5749203751697,-29.3333313408353"
                    Point3="17.5749203751697,-29.3333313408353" />
                  <mssgle:LineSegment
                    End="24.6666591498586,-29.3333313408353" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="5.57492037516968,1,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach 循环容器.PrecedenceConstraints[约束 3]"
          TopLeft="381.499977449577,31.1269797651002">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34.2592540346551,0"
              Start="0,0"
              End="26.7592540346551,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.7592540346551,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach 循环容器.PrecedenceConstraints[约束 4]"
          TopLeft="214.333318299718,68.3809462136966">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="112.629620416665,52.0476162011933"
              Start="0,0"
              End="105.129620416665,52.0476162011933">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="43.5317664143724,0" />
                  <mssgle:CubicBezierSegment
                    Point1="43.5317664143724,0"
                    Point2="47.5317664143724,0"
                    Point3="47.5317664143724,4" />
                  <mssgle:LineSegment
                    End="47.5317664143724,48.0476162011933" />
                  <mssgle:CubicBezierSegment
                    Point1="47.5317664143724,48.0476162011933"
                    Point2="47.5317664143724,52.0476162011933"
                    Point3="51.5317664143724,52.0476162011933" />
                  <mssgle:LineSegment
                    End="105.129620416665,52.0476162011933" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="39.5317664143724,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach 循环容器.PrecedenceConstraints[约束 5]"
          TopLeft="456.962938716383,121.46427738849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45.2037031481299,0"
              Start="0,0"
              End="37.7037031481299,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="37.7037031481299,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach 循环容器.PrecedenceConstraints[约束 6]"
          TopLeft="632.166641864513,120.464278384739">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45.666672958268,0"
              Start="0,0"
              End="38.166672958268,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="38.166672958268,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach 循环容器.PrecedenceConstraints[约束 7]"
          TopLeft="758.749980280798,142.428564407388">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.4285690565499"
              Start="0,0"
              End="0,37.9285690565499">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.9285690565499" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1059,344"
          Size="1059,387"
          Id="Package\Foreach 循环容器"
          TopLeft="318.41667221321,69.71428618869" />
        <NodeLayout
          Size="169,42"
          Id="Package\Foreach 循环容器 1\Move Execl File"
          TopLeft="34.3703542182482,11.6666496935355" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="227,110"
          Size="227,153"
          Id="Package\Foreach 循环容器 1"
          TopLeft="691.111083648824,571.999970776696" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[约束]"
          TopLeft="257.833331909445,293.49999335834">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="60.5833403037652,-30.28570716965"
              Start="0,0"
              End="53.0833403037652,-30.28570716965">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.2916701518826,0" />
                  <mssgle:CubicBezierSegment
                    Point1="26.2916701518826,0"
                    Point2="30.2916701518826,0"
                    Point3="30.2916701518826,-4" />
                  <mssgle:LineSegment
                    End="30.2916701518826,-26.28570716965" />
                  <mssgle:CubicBezierSegment
                    Point1="30.2916701518826,-26.28570716965"
                    Point2="30.2916701518826,-30.28570716965"
                    Point3="34.2916701518826,-30.28570716965" />
                  <mssgle:LineSegment
                    End="53.0833403037652,-30.28570716965" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[约束 1]"
          TopLeft="847.91667221321,456.71428618869">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-43.305588564386,115.285684588006"
              Start="0,0"
              End="-43.305588564386,107.785684588006">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.642842294003" />
                  <mssgle:CubicBezierSegment
                    Point1="0,53.642842294003"
                    Point2="0,57.642842294003"
                    Point3="-4,57.642842294003" />
                  <mssgle:LineSegment
                    End="-39.305588564386,57.642842294003" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.305588564386,57.642842294003"
                    Point2="-43.305588564386,57.642842294003"
                    Point3="-43.305588564386,61.642842294003" />
                  <mssgle:LineSegment
                    End="-43.305588564386,107.785684588006" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach 循环容器\Add RawInventory data">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="115,42"
          Id="Package\Foreach 循环容器\Add RawInventory data\派生列"
          TopLeft="100.333333697584,155.071430279284" />
        <NodeLayout
          Size="145,42"
          Id="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标"
          TopLeft="149.999994039535,249.785701524239" />
        <NodeLayout
          Size="139,42"
          Id="Package\Foreach 循环容器\Add RawInventory data\平面文件源"
          TopLeft="95.833329525259,38.071426626371" />
        <EdgeLayout
          Id="Package\Foreach 循环容器\Add RawInventory data.Paths[派生列输出]"
          TopLeft="157.833333697584,197.071430279284">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="64.666660341951,52.714271244955"
              Start="0,0"
              End="64.666660341951,45.214271244955">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.3571356224775" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.3571356224775"
                    Point2="0,26.3571356224775"
                    Point3="4,26.3571356224775" />
                  <mssgle:LineSegment
                    End="60.666660341951,26.3571356224775" />
                  <mssgle:CubicBezierSegment
                    Point1="60.666660341951,26.3571356224775"
                    Point2="64.666660341951,26.3571356224775"
                    Point3="64.666660341951,30.3571356224775" />
                  <mssgle:LineSegment
                    End="64.666660341951,45.214271244955" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="115,42"
          Id="Package\Foreach 循环容器\Add RawInventory data\行计数"
          TopLeft="310.499987880389,143.857135788519" />
        <EdgeLayout
          Id="Package\Foreach 循环容器\Add RawInventory data.Paths[平面文件源输出]"
          TopLeft="165.333329525259,80.071426626371">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="202.66665835513,63.7857091621479"
              Start="0,0"
              End="202.66665835513,56.2857091621479">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.892854581074" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.892854581074"
                    Point2="0,31.892854581074"
                    Point3="4,31.892854581074" />
                  <mssgle:LineSegment
                    End="198.66665835513,31.892854581074" />
                  <mssgle:CubicBezierSegment
                    Point1="198.66665835513,31.892854581074"
                    Point2="202.66665835513,31.892854581074"
                    Point3="202.66665835513,35.892854581074" />
                  <mssgle:LineSegment
                    End="202.66665835513,56.2857091621479" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach 循环容器\Add RawInventory data.Paths[行计数 输出 1]"
          TopLeft="310.499987880389,164.857135788519">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-95.166654182805,11.2142944907651"
              Start="0,0"
              End="-87.666654182805,11.2142944907651">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-43.5833270914025,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-43.5833270914025,0"
                    Point2="-47.5833270914025,0"
                    Point3="-47.5833270914025,4" />
                  <mssgle:LineSegment
                    End="-47.5833270914025,7.2142944907651" />
                  <mssgle:CubicBezierSegment
                    Point1="-47.5833270914025,7.2142944907651"
                    Point2="-47.5833270914025,11.2142944907651"
                    Point3="-51.5833270914025,11.2142944907651" />
                  <mssgle:LineSegment
                    End="-87.666654182805,11.2142944907651" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach 循环容器\Add RawInventory data\OLE DB 目标">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package\Foreach 循环容器\Add RawInventory data.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="145,42"
          Id="Package\Foreach 循环容器\Add RawInventory data.EventHandlers[OnPostExecute]\Script Task"
          TopLeft="324,77" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>